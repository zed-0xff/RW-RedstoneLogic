<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  <ThingDef Name="RedstoneBuildingBase" ParentName="BuildingBase" Abstract="True">
    <designationCategory>Blocky</designationCategory>
    <category>Building</category>
    <altitudeLayer>Building</altitudeLayer>
    <tickerType>Normal</tickerType>
    <researchPrerequisites>
      <li>Redstone</li>
    </researchPrerequisites>
    <modExtensions>
      <li Class="Blocky.Core.ExtSpawningWipes">
        <defs>
          <li>RedstoneWire</li>
        </defs>
      </li>
    </modExtensions>
    <soundImpactDefault>BulletImpact_Metal</soundImpactDefault>
    <uiIconScale>0.75</uiIconScale>
    <statBases>
      <Flammability>0</Flammability>
      <Beauty>-1</Beauty>
    </statBases>
    <building>
      <ai_chillDestination>false</ai_chillDestination>
    </building>
  </ThingDef>

  <ThingDef ParentName="RedstoneBuildingBase">
    <defName>RedstoneWire</defName>
    <label>redstone wire</label>
    <description>Redstone wire can transmit power, which can be used to operate mechanism components (doors, pistons, redstone lamps, etc.)</description>
    <thingClass>RedstoneLogic.Building_RedstoneWire</thingClass>
    <graphicData>
      <texPath>RedstoneLogic/RedstoneWire_Atlas</texPath>
      <color>(0.4, 0, 0)</color>
      <graphicClass>RedstoneLogic.Graphic_RedstoneWire</graphicClass>
      <damageData>
        <rect>(0,0.35,1,0.3)</rect>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Building/Linked/PowerConduit_MenuIcon</uiIconPath>
    <building>
      <isInert>true</isInert>
      <isEdifice>false</isEdifice>
      <blueprintGraphicData>
        <graphicClass>RedstoneLogic.Graphic_RedstoneWire</graphicClass>
        <texPath>RedstoneLogic/RedstoneWire_Atlas</texPath>
      </blueprintGraphicData>
    </building>
    <drawerType>MapMeshAndRealTime</drawerType>
    <altitudeLayer>Conduits</altitudeLayer>
    <passability>Standable</passability>
    <leaveResourcesWhenKilled>false</leaveResourcesWhenKilled>
    <resourcesFractionWhenDeconstructed>0</resourcesFractionWhenDeconstructed>
    <statBases>
      <MaxHitPoints>40</MaxHitPoints>
      <WorkToBuild>35</WorkToBuild>
    </statBases>
    <placingDraggableDimensions>1</placingDraggableDimensions>
    <costList>
      <Redstone>1</Redstone>
    </costList>
    <comps>
      <li Class="RedstoneLogic.CompProperties_RedstonePower">
        <compClass>RedstoneLogic.CompRedstonePowerTransmitter</compClass>
      </li>
      <li Class="RedstoneLogic.CompProperties_RedstoneGlower">
        <glowRadius>1</glowRadius>
        <glowColor>(220,0,0,0)</glowColor>
      </li>
    </comps>
    <placeWorkers>
      <li>RedstoneLogic.PlaceWorker_RedstoneWire</li>
    </placeWorkers>
    <rotatable>false</rotatable>
    <selectable>true</selectable>
    <neverMultiSelect>true</neverMultiSelect>
    <terrainAffordanceNeeded>Light</terrainAffordanceNeeded>
    <uiOrder>2000</uiOrder>
    <constructEffect>ConstructMetal</constructEffect>
    <clearBuildingArea>false</clearBuildingArea>
    <designationHotKey>Misc1</designationHotKey>
    <modExtensions>
      <li Class="Blocky.Core.ExtUseBlueprintAsPreview"/>
    </modExtensions>
  </ThingDef>

  <ThingDef ParentName="RedstoneBuildingBase">
    <defName>RedstoneTorch</defName>
    <label>redstone torch</label>
    <description>Redstone torches can be used to power blocks and transmission components such as redstone dust, activate mechanism components such as pistons. Produces a small amount of light.</description>
    <graphicData>
      <texPath>Blocky/R/RedstoneTorch</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <drawRotated>false</drawRotated>
      <damageData>
        <rect>(0.35,0.35,0.3,0.3)</rect>
      </damageData>
    </graphicData>
    <rotatable>false</rotatable>
    <passability>PassThroughOnly</passability>
    <pathCost>14</pathCost>
    <constructEffect>ConstructWood</constructEffect>
    <fillPercent>0.15</fillPercent>
    <statBases>
      <MaxHitPoints>75</MaxHitPoints>
      <WorkToBuild>100</WorkToBuild>
      <Beauty>0</Beauty>
    </statBases>
    <selectable>true</selectable>
    <costList>
      <WoodLog>20</WoodLog>
      <Redstone>5</Redstone>
    </costList>
    <building>
      <artificialForMeditationPurposes>false</artificialForMeditationPurposes>
    </building>
    <soundImpactDefault>BulletImpact_Ground</soundImpactDefault>
    <leaveResourcesWhenKilled>false</leaveResourcesWhenKilled>
    <resourcesFractionWhenDeconstructed>0</resourcesFractionWhenDeconstructed>
    <drawPlaceWorkersWhileSelected>true</drawPlaceWorkersWhileSelected>
    <comps>
      <li Class="CompProperties_Glower">
        <glowRadius>3</glowRadius>
        <glowColor>(220,0,0,0)</glowColor>
      </li>
      <li Class="RedstoneLogic.CompProperties_RedstonePower">
        <compClass>RedstoneLogic.CompRedstonePowerGenerator</compClass>
      </li>
    </comps>
    <uiOrder>2800</uiOrder>
    <designationHotKey>Misc10</designationHotKey>
  </ThingDef>

  <ThingDef ParentName="RedstoneBuildingBase">
    <defName>RedstoneLamp</defName>
    <label>redstone lamp</label>
    <description>A redstone lamp is a block that produces light when activated with a redstone signal.</description>
    <thingClass>Building</thingClass>
    <minifiedDef>MinifiedThing</minifiedDef>
    <passability>PassThroughOnly</passability>
    <selectable>true</selectable>
    <fillPercent>0.50</fillPercent>
    <pathCost>20</pathCost>
    <rotatable>false</rotatable>
    <thingCategories>
      <li>BuildingsFurniture</li>
    </thingCategories>
    <graphicData>
      <texPath>Blocky/R/RedstoneLamp_north</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <shadowData>
        <volume>(0.3, 0.6, 0.3)</volume>
        <offset>(0,0,-0.1)</offset>
      </shadowData>
      <damageData>
        <rect>(0.2,0.2,0.6,0.6)</rect>
      </damageData>
    </graphicData>
    <drawerType>MapMeshAndRealTime</drawerType>
    <comps>
      <li Class="RedstoneLogic.CompProperties_RedstonePower">
        <compClass>RedstoneLogic.CompRedstonePowerTransmitter</compClass>
      </li>
      <li Class="RedstoneLogic.CompProperties_RedstoneGlower">
        <glowRadius>12</glowRadius>
        <glowColor>(214,148,94,0)</glowColor>
        <colorPickerEnabled>true</colorPickerEnabled>
        <darklightToggle>true</darklightToggle>
      </li>
      <li Class="RedstoneLogic.CompProperties_PoweredGraphic">
        <graphicData>
          <texPath>Blocky/R/RedstoneLampOn_north</texPath>
          <graphicClass>Graphic_Single</graphicClass>
          <drawSize>(1, 1)</drawSize>
        </graphicData>
      </li>
    </comps>
    <statBases>
      <MaxHitPoints>50</MaxHitPoints>
      <WorkToBuild>300</WorkToBuild>
      <Mass>20</Mass>
      <Beauty>0</Beauty>
    </statBases>
    <costList>
      <Redstone>20</Redstone>
    </costList>
    <uiOrder>2990</uiOrder>
    <designationHotKey>Misc11</designationHotKey>
  </ThingDef>

  <ThingDef ParentName="RedstoneBuildingBase">
    <defName>DaylightDetector</defName>
    <label>daylight detector</label>
    <description>A daylight detector can be used to produce redstone power in proportion to the daylight cycle.
Sources of light (torches, glowstone, etc.) cannot activate a daylight detector.</description>
    <thingClass>Building</thingClass>
    <minifiedDef>MinifiedThing</minifiedDef>
    <passability>PassThroughOnly</passability>
    <selectable>true</selectable>
    <fillPercent>0.25</fillPercent>
    <pathCost>10</pathCost>
    <rotatable>false</rotatable>
    <thingCategories>
      <li>BuildingsFurniture</li> <!-- FIXME -->
    </thingCategories>
    <graphicData>
      <texPath>Blocky/D/DaylightDetector_north</texPath>
      <graphicClass>Graphic_Single</graphicClass>
      <shadowData>
        <volume>(0.3, 0.3, 0.3)</volume>
        <offset>(0,0,-0.1)</offset>
      </shadowData>
    </graphicData>
    <drawerType>MapMeshAndRealTime</drawerType>
    <comps>
      <li Class="RedstoneLogic.CompProperties_DaylightDetector">
        <moonGraphicData>
          <texPath>Blocky/D/DaylightDetectorInverted_north</texPath>
          <graphicClass>Graphic_Single</graphicClass>
          <shadowData>
            <volume>(0.3, 0.3, 0.3)</volume>
            <offset>(0,0,-0.1)</offset>
          </shadowData>
        </moonGraphicData>
      </li>
    </comps>
    <statBases>
      <MaxHitPoints>50</MaxHitPoints>
      <WorkToBuild>300</WorkToBuild>
      <Mass>10</Mass>
    </statBases>
    <costList>
      <Redstone>10</Redstone>
      <Steel>10</Steel>
    </costList>
  </ThingDef>

  <ThingDef ParentName="RedstoneBuildingBase">
    <defName>Repeater</defName>
    <label>repeater</label>
    <description>A redstone repeater can be used in four different ways: to "repeat" redstone signals back to full strength, delay signals, prevent signals moving backwards, or to "lock" signals in one state.</description>
    <thingClass>Building</thingClass>
    <minifiedDef>MinifiedThing</minifiedDef>
    <passability>PassThroughOnly</passability>
    <selectable>true</selectable>
    <fillPercent>0.25</fillPercent>
    <pathCost>10</pathCost>
    <rotatable>true</rotatable>
    <thingCategories>
      <li>BuildingsFurniture</li> <!-- FIXME -->
    </thingCategories>
    <graphicData>
      <texPath>Blocky/R/RepeaterOff</texPath>
      <graphicClass>Graphic_Multi</graphicClass>
      <shadowData>
        <volume>(0.3, 0.3, 0.3)</volume>
        <offset>(0,0,-0.1)</offset>
      </shadowData>
    </graphicData>
    <drawerType>MapMeshAndRealTime</drawerType>
    <comps>
      <li Class="RedstoneLogic.CompProperties_RedstonePower">
        <compClass>RedstoneLogic.CompRepeater</compClass>
      </li>
      <li Class="RedstoneLogic.CompProperties_PoweredGraphic">
        <graphicData>
          <texPath>Blocky/R/RepeaterOn</texPath>
          <graphicClass>Graphic_Multi</graphicClass>
          <drawSize>(1.5, 1.5)</drawSize>
        </graphicData>
      </li>
    </comps>
    <statBases>
      <MaxHitPoints>50</MaxHitPoints>
      <WorkToBuild>300</WorkToBuild>
      <Mass>10</Mass>
    </statBases>
    <costList>
      <Redstone>15</Redstone>
      <Steel>20</Steel>
    </costList>
  </ThingDef>
</Defs>
